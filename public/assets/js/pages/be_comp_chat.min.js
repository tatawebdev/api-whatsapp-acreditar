/*!
 * dashmix - v5.9.0
 * @author pixelcave - https://pixelcave.com
 * Copyright (c) 2024
 */
!function () {
    "use strict";

    // Classes de estilo
    const classes = {
        message: ["fs-sm", "d-inline-block", "fw-medium", "animated", "fadeIn", "bg-body-light", "border-3", "px-3", "py-2", "mb-2", "shadow-sm", "mw-100"],
        sender: ["border-end", "border-primary", "rounded-start", "text-start"],
        receiver: ["border-start", "border-dark", "rounded-end"],
        header: ["fs-sm", "text-muted", "animated", "fadeIn", "my-2"]
    };

    class Chat {
        static init() {
            this.initChat();
        }

        static initChat() {
            document.querySelectorAll(".js-chat-form form").forEach(form => {
                form.addEventListener("submit", event => {
                    event.preventDefault();
                    const input = event.currentTarget.querySelector(".js-chat-input");
                    this.addMessage(parseInt(input.dataset.targetChatId), input.value, "self", input);
                });
            });
        }

        static addHeader(chatId, headerText, position = "") {
            const chatContainer = document.querySelector(`.js-chat-messages[data-chat-id="${chatId}"]`);
            if (headerText && chatContainer) {
                const headerDiv = document.createElement("div");
                const headerContent = document.createElement("div");
                classes.header.forEach(className => headerContent.classList.add(className));

                headerContent.classList.toggle("text-end", position === "self");
                headerDiv.classList.toggle("ms-4", position === "self");
                headerDiv.classList.toggle("me-4", position !== "self");

                headerContent.innerText = headerText;
                headerDiv.appendChild(headerContent);
                chatContainer.appendChild(headerDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
        }

        static addMessage({ chatId, messageText, position, input, messageData }) {
            const chatContainer = document.querySelector(`.js-chat-messages[data-chat-id="${chatId}"]`);
            if (messageText && chatContainer) {
                const messageDiv = document.createElement("div");
                const messageContent = document.createElement("div");
                classes.message.forEach(className => messageContent.classList.add(className));



                messageDiv.classList.toggle("text-end", position === "self");
                messageDiv.classList.toggle("ms-4", position === "self");
                messageDiv.classList.toggle("me-4", position !== "self");


                messageContent.innerText = messageText;
                messageDiv.appendChild(messageContent);


                if (position === "self") {
                    classes.sender.forEach(className => messageContent.classList.add(className));

                    const statusDiv = document.createElement("div");
                    statusDiv.style.cssText = "display: flex; justify-content: flex-end; font-size: 0.75rem; color: #6c757d;";
                    statusDiv.innerText = messageData?.status || 'not sent';
                    statusDiv.id = "status_" + messageData?.message_id;
                    statusDiv.style.paddingLeft = "40px";


                    messageContent.appendChild(statusDiv);

                } else {
                    classes.receiver.forEach(className => messageContent.classList.add(className));
                }





                chatContainer.appendChild(messageDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;

                if (input) input.value = ""; // Limpa o input
            }
        }
        static addImage(chatId, imageUrl, position) {
            const chatContainer = document.querySelector(`.js-chat-messages[data-chat-id="${chatId}"]`);
            if (imageUrl && chatContainer) {
                const messageDiv = document.createElement("div");
                const messageContent = document.createElement("div");
                classes.message.forEach(className => messageContent.classList.add(className));

                messageDiv.classList.toggle("text-end", position === "self");
                messageDiv.classList.toggle("ms-4", position === "self");
                messageDiv.classList.toggle("me-4", position !== "self");

                if (position === "self") {
                    classes.sender.forEach(className => messageContent.classList.add(className));
                } else {
                    classes.receiver.forEach(className => messageContent.classList.add(className));
                }

                // Cria o elemento de imagem
                const imgElement = document.createElement("img");
                imgElement.src = imageUrl;
                imgElement.classList.add("img-fluid", "rounded");

                messageContent.appendChild(imgElement);
                messageDiv.appendChild(messageContent);
                chatContainer.appendChild(messageDiv);
                chatContainer.scrollTop = chatContainer.scrollHeight;
            }
        }
        static clearChat(chatId) {
            const chatContainer = document.querySelector(`.js-chat-messages[data-chat-id="${chatId}"]`);
            if (chatContainer) {
                chatContainer.innerHTML = "";
                chatContainer.scrollTop = 0;
            }
        }
    }

    Dashmix.onLoad(() => {
        Chat.init();
        window.Chat = Chat;
    });
}();
